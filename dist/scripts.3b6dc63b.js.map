{"version":3,"sources":["output.json","../node_modules/fast-average-color/dist/index.esm.js","../node_modules/dom-confetti/lib/main.js","scripts/index.js"],"names":["module","exports","bp8Bpvk","yYCtqqx","CkZ4VPF","KHZRDIz","BdxTjBL","VDsXeaP","BzzwyIA","UFTHTKF","qfdP0FR","wYo11Ed","Xz3eyJ7","zMc59dn","Ioo82Jx","CEFVZIQ","RQNJYVW","Lvr3SNR","xCYhPO3","N8PNoaE","JrIExsc","Ar7IibA","EwVNgm6","sFMbaao","J0mvYpG","PxiFNU6","m5Dz2af","JIOKwZM","OAq0dB1","It9OFfG","aqs9OOr","lWdawHO","sKdwHkW","H4Hjy6u","OgxwrwI","oTCsxrr","N5oA78c","mIkv3ki","U9w9jcu","JTUinq5","Js8LvF0","IriNws2","Eyc8wbl","JwAU5PQ","X3HttQn","VeqCv8E","oV0ASyJ","jT4biNT","KRkfnxw","eTQyqGN","O89NXKB","u9eeWwX","pjr1f6i","dN3fZw8","ggoP0De","SfMvB1X","DDPjVeS","zDpd5Dm","Ge7vn47","fIfq3Yc","DfKJYYB","JESxW5l","AbTVN5X","avHknIc","BnoAn79","H4r696Q","LgPmRBz","P6vdEoc","DMWAzwo","kpfugqp","j9FREKp","XrYhMKY","hHIjkSH","LURYFhu","LE6uOe1","kBA5R1Z","DldV73D","iwgaXvn","Zwuix3i","RNqyfC4","Ovph6GS","J7dErgv","OVN3sf9","NkbdIus","FGL9jbR","rnhW0fB","MfhSPiR","bLkbpEV","RJjTT3k","kl0lRau","bW6BcEp","g3NNR09","VzXxPyc","FastAverageColor","toHex","num","str","toString","length","arrayToHex","arr","map","join","isDark","color","result","prepareIgnoredColor","Array","isArray","slice","isIgnoredColor","data","index","ignoredColor","i","isIgnoredColorAsNumbers","isIgnoredRGBColor","isIgnoredRGBAColor","isIgnoredRGBAColorWithThreshold","inRange","colorComponent","ignoredColorComponent","value","redIgnored","greenIgnored","blueIgnored","alphaIgnored","threshold","alphaData","alphaInRange","dominantAlgorithm","len","options","colorHash","step","red","green","blue","alpha","key","Math","round","buffer","max","Object","keys","sort","a","b","countA","countB","redTotal","greenTotal","blueTotal","alphaTotal","count","defaultColor","simpleAlgorithm","sqrtAlgorithm","sqrt","getDefaultColor","getOption","name","defaultValue","MIN_SIZE","MAX_SIZE","isSvg","filename","search","getOriginalSize","resource","HTMLImageElement","width","naturalWidth","height","naturalHeight","src","HTMLVideoElement","videoWidth","videoHeight","prepareSizeAndPosition","originalSize","srcLeft","srcTop","srcWidth","srcHeight","destWidth","factor","destHeight","mode","makeCanvas","window","OffscreenCanvas","document","createElement","ERROR_PREFIX","outputError","text","details","silent","console","error","getError","Error","getColorAsync","Promise","reject","img","Image","crossOrigin","_bindImageEvents","complete","getColor","resolve","prepareResult","size","_ctx","_canvas","getContext","clearRect","drawImage","bitmapData","getImageData","getColorFromArray4","e","bytesPerPixel","arrLength","algorithm","rgb","rgba","concat","isDarkColor","hex","hexa","isLight","destroy","onload","unbindEvents","onerror","onabort","removeEventListener","addEventListener","CLIENT_ID","balance","originalOrder","colorDistance","color1","color2","rgbToHsl","main","albumID","album","imagesP","getImages","images","image","imageSrc","id","ImagePreview","load","all","querySelector","fadeOut","querySelectorAll","forEach","element","fadeIn","render","imgs","displayWithPreview","button","undefined","i1","i2","c1","colors","selectedColor","c2","dist1","dist2","angle","spread","elementCount","val","regex","match","replace","catch","constructor","fac","simple","dominant","once","parent","previewContainer","idPreview","innerHTML","order","classList","add","previews","entries","preview","style","backgroundColor","opacity","appendChild","fetch","headers","Authorization","status","json","grandParent","n","r","t","g","h","l","u","arguments","min","Element","prototype","duration","displayMode","limit","callback","currentTransiton","transition","display","setTimeout","remove","disable","_0x50e1","_0x349391","_0x8c7c3a","_0x483bd4","_0x50e109","_0x483b","_0x2549fb","_0x5428be"],"mappings":";;;AAAAA,OAAOC,QAAQ,CAACC,QAAQ,MAAMC,QAAQ,MAAMC,QAAQ,MAAMC,QAAQ,MAAMC,QAAQ,MAAMC,QAAQ,MAAMC,QAAQ,MAAgB,UAAA,MAAMC,QAAQ,MAAMC,QAAQ,MAAMC,QAAQ,MAAMC,QAAQ,MAAMC,QAAQ,MAAMC,QAAQ,MAAMC,QAAQ,MAAgB,UAAA,MAAMC,QAAQ,MAAMC,QAAQ,MAAMC,QAAQ,MAAMC,QAAQ,MAAMC,QAAQ,MAAMC,QAAQ,MAAMC,QAAQ,MAAgB,UAAA,MAAgB,UAAA,MAAMC,QAAQ,MAAMC,QAAQ,MAAgB,UAAA,MAAMC,QAAQ,MAAMC,QAAQ,MAAMC,QAAQ,MAAMC,QAAQ,MAAgB,UAAA,MAAMC,QAAQ,MAAMC,QAAQ,MAAMC,QAAQ,MAAMC,QAAQ,MAAMC,QAAQ,MAAMC,QAAQ,MAAMC,QAAQ,MAAgB,UAAA,MAAMC,QAAQ,MAAMC,QAAQ,MAAMC,QAAQ,MAAMC,QAAQ,MAAMC,QAAQ,MAAMC,QAAQ,MAAMC,QAAQ,MAAgB,UAAA,MAAgB,UAAA,MAAMC,QAAQ,MAAMC,QAAQ,MAAMC,QAAQ,MAAMC,QAAQ,MAAgB,UAAA,MAAgB,UAAA,MAAMC,QAAQ,MAAMC,QAAQ,MAAMC,QAAQ,MAAgB,UAAA,MAAMC,QAAQ,MAAMC,QAAQ,MAAMC,QAAQ,MAAgB,UAAA,MAAMC,QAAQ,MAAMC,QAAQ,MAAMC,QAAQ,MAAgB,UAAA,MAAMC,QAAQ,MAAMC,QAAQ,MAAMC,QAAQ,MAAMC,QAAQ,MAAMC,QAAQ,MAAMC,QAAQ,MAAMC,QAAQ,MAAMC,QAAQ,MAAMC,QAAQ,MAAgB,UAAA,MAAMC,QAAQ,MAAMC,QAAQ,MAAMC,QAAQ,MAAgB,UAAA,MAAMC,QAAQ,MAAMC,QAAQ,MAAMC,QAAQ,MAAMC,QAAQ,MAAgB,UAAA,MAAMC,QAAQ,MAAgB,UAAA,MAAMC,QAAQ,MAAMC,QAAQ,MAAMC,QAAQ,MAAMC,QAAQ,MAAMC,QAAQ,MAAMC,QAAQ,MAAMC,QAAQ,MAAMC,QAAQ,MAAgB,UAAA,MAAMC,QAAQ,MAAMC,QAAQ,MAAMC,QAAQ,MAAgB,UAAA,MAAMC,QAAQ,MAAMC,QAAQ,MAAMC,QAAQ,MAAMC,QAAQ,MAAMC,QAAQ,MAA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","file":"scripts.3b6dc63b.js","sourceRoot":"..\\app","sourcesContent":["module.exports={bp8Bpvk:\"001\",yYCtqqx:\"002\",CkZ4VPF:\"003\",KHZRDIz:\"004\",BdxTjBL:\"005\",VDsXeaP:\"006\",BzzwyIA:\"007\",\"3DakrmF\":\"008\",UFTHTKF:\"009\",qfdP0FR:\"010\",wYo11Ed:\"011\",Xz3eyJ7:\"012\",zMc59dn:\"013\",Ioo82Jx:\"014\",CEFVZIQ:\"015\",\"1IgGF3x\":\"016\",RQNJYVW:\"017\",Lvr3SNR:\"018\",xCYhPO3:\"019\",N8PNoaE:\"020\",JrIExsc:\"021\",Ar7IibA:\"022\",EwVNgm6:\"023\",\"1oORhlY\":\"024\",\"68Kps7C\":\"025\",sFMbaao:\"026\",J0mvYpG:\"027\",\"8bqfVBc\":\"028\",PxiFNU6:\"029\",m5Dz2af:\"030\",JIOKwZM:\"031\",OAq0dB1:\"032\",\"5G4yieh\":\"033\",It9OFfG:\"034\",aqs9OOr:\"035\",lWdawHO:\"036\",sKdwHkW:\"037\",H4Hjy6u:\"038\",OgxwrwI:\"039\",oTCsxrr:\"040\",\"8daAyR3\":\"041\",N5oA78c:\"042\",mIkv3ki:\"043\",U9w9jcu:\"044\",JTUinq5:\"045\",Js8LvF0:\"046\",IriNws2:\"047\",Eyc8wbl:\"048\",\"4FHSNqv\":\"049\",\"2OW7c9D\":\"050\",JwAU5PQ:\"051\",X3HttQn:\"052\",VeqCv8E:\"053\",oV0ASyJ:\"054\",\"5zcgyrX\":\"055\",\"55T5DTG\":\"056\",jT4biNT:\"057\",KRkfnxw:\"058\",eTQyqGN:\"059\",\"8O3KHCO\":\"060\",O89NXKB:\"061\",u9eeWwX:\"062\",pjr1f6i:\"063\",\"23ZxgJ9\":\"064\",dN3fZw8:\"065\",ggoP0De:\"066\",SfMvB1X:\"067\",\"9I3yAoB\":\"068\",DDPjVeS:\"069\",zDpd5Dm:\"070\",Ge7vn47:\"071\",fIfq3Yc:\"072\",DfKJYYB:\"073\",JESxW5l:\"074\",AbTVN5X:\"075\",avHknIc:\"076\",BnoAn79:\"077\",\"1L2HGS0\":\"078\",H4r696Q:\"079\",LgPmRBz:\"080\",P6vdEoc:\"081\",\"3YnlKTj\":\"082\",DMWAzwo:\"083\",kpfugqp:\"084\",j9FREKp:\"085\",XrYhMKY:\"086\",\"6caYqAP\":\"087\",hHIjkSH:\"088\",\"3Lh703V\":\"089\",LURYFhu:\"090\",LE6uOe1:\"091\",kBA5R1Z:\"092\",DldV73D:\"093\",iwgaXvn:\"094\",Zwuix3i:\"095\",RNqyfC4:\"096\",Ovph6GS:\"097\",\"7NKVJho\":\"098\",J7dErgv:\"099\",OVN3sf9:\"100\",NkbdIus:\"101\",\"4wxUr8I\":\"102\",FGL9jbR:\"103\",rnhW0fB:\"104\",MfhSPiR:\"105\",bLkbpEV:\"106\",RJjTT3k:\"107\",kl0lRau:\"108\",bW6BcEp:\"109\",g3NNR09:\"110\",VzXxPyc:\"111\"};","/*! Fast Average Color | © 2020 Denis Seleznev | MIT License | https://github.com/fast-average-color/fast-average-color */\nfunction toHex(num) {\n    const str = num.toString(16);\n\n    return str.length === 1 ? '0' + str : str;\n}\n\nfunction arrayToHex(arr) {\n    return '#' + arr.map(toHex).join('');\n}\n\nfunction isDark(color) {\n    // http://www.w3.org/TR/AERT#color-contrast\n    const result = (color[0] * 299 + color[1] * 587 + color[2] * 114) / 1000;\n\n    return result < 128;\n}\n\nfunction prepareIgnoredColor(color) {\n    if (!color) { return color; }\n\n    if (Array.isArray(color)) {\n        return typeof color[0] === 'number' ? [color.slice()] : color;\n    }\n\n    return [color];\n}\n\nfunction isIgnoredColor(data, index, ignoredColor) {\n    for (let i = 0; i < ignoredColor.length; i++) {\n        if (isIgnoredColorAsNumbers(data, index, ignoredColor[i])) {\n            return true;\n        }\n    }\n\n    return false;\n}\n\nfunction isIgnoredColorAsNumbers(data, index, ignoredColor) {\n    switch (ignoredColor.length) {\n        case 3:\n            // [red, green, blue]\n            if (isIgnoredRGBColor(data, index, ignoredColor)) {\n                return true;\n            }\n\n            break;\n        case 4:\n            // [red, green, blue, alpha]\n            if (isIgnoredRGBAColor(data, index, ignoredColor)) {\n                return true;\n            }\n\n            break;\n        case 5:\n            // [red, green, blue, alpha, threshold]\n            if (isIgnoredRGBAColorWithThreshold(data, index, ignoredColor)) {\n                return true;\n            }\n\n            break;\n        default:\n            return false;\n    }\n}\n\nfunction isIgnoredRGBColor(data, index, ignoredColor) {\n    // Ignore if the pixel are transparent.\n    if (data[index + 3] !== 255) {\n        return true;\n    }\n\n    if (data[index] === ignoredColor[0] &&\n        data[index + 1] === ignoredColor[1] &&\n        data[index + 2] === ignoredColor[2]\n    ) {\n        return true;\n    }\n\n    return false;\n}\n\nfunction isIgnoredRGBAColor(data, index, ignoredColor) {\n    if (data[index + 3] && ignoredColor[3]) {\n        return data[index] === ignoredColor[0] &&\n            data[index + 1] === ignoredColor[1] &&\n            data[index + 2] === ignoredColor[2] &&\n            data[index + 3] === ignoredColor[3];\n    }\n\n    // Ignore rgb components if the pixel are fully transparent.\n    return data[index + 3] === ignoredColor[3];\n}\n\nfunction inRange(colorComponent, ignoredColorComponent, value) {\n    return colorComponent >= (ignoredColorComponent - value) &&\n        colorComponent <= (ignoredColorComponent + value);\n}\n\nfunction isIgnoredRGBAColorWithThreshold(data, index, ignoredColor) {\n    const redIgnored = ignoredColor[0];\n    const greenIgnored = ignoredColor[1];\n    const blueIgnored = ignoredColor[2];\n    const alphaIgnored = ignoredColor[3];\n    const threshold = ignoredColor[4];\n    const alphaData = data[index + 3];\n\n    const alphaInRange = inRange(alphaData, alphaIgnored, threshold);\n    if (!alphaIgnored) {\n        return alphaInRange;\n    }\n\n    if (!alphaData && alphaInRange) {\n        return true;\n    }\n\n    if (inRange(data[index], redIgnored, threshold) &&\n        inRange(data[index + 1], greenIgnored, threshold) &&\n        inRange(data[index + 2], blueIgnored, threshold) &&\n        alphaInRange\n    ) {\n        return true;\n    }\n\n    return false;\n}\n\nfunction dominantAlgorithm(arr, len, options) {\n    const colorHash = {};\n    const divider = 24;\n    const ignoredColor = options.ignoredColor;\n    const step = options.step;\n\n    for (let i = 0; i < len; i += step) {\n        const red = arr[i];\n        const green = arr[i + 1];\n        const blue = arr[i + 2];\n        const alpha = arr[i + 3];\n\n        if (ignoredColor && isIgnoredColor(arr, i, ignoredColor)) {\n            continue;\n        }\n\n        const key = Math.round(red / divider) + ',' +\n                Math.round(green / divider) + ',' +\n                Math.round(blue / divider);\n\n        if (colorHash[key]) {\n            colorHash[key] = [\n                colorHash[key][0] + red * alpha,\n                colorHash[key][1] + green * alpha,\n                colorHash[key][2] + blue * alpha,\n                colorHash[key][3] + alpha,\n                colorHash[key][4] + 1\n            ];\n        } else {\n            colorHash[key] = [red * alpha, green * alpha, blue * alpha, alpha, 1];\n        }\n    }\n\n    const buffer = Object.keys(colorHash)\n        .map(key => colorHash[key])\n        .sort((a, b) => {\n            const countA = a[4];\n            const countB = b[4];\n\n            return countA > countB ?  -1 : countA === countB ? 0 : 1;\n        });\n\n    const max = buffer[0];\n\n    const redTotal = max[0];\n    const greenTotal = max[1];\n    const blueTotal = max[2];\n\n    const alphaTotal = max[3];\n    const count = max[4];\n\n    return alphaTotal ? [\n        Math.round(redTotal / alphaTotal),\n        Math.round(greenTotal / alphaTotal),\n        Math.round(blueTotal / alphaTotal),\n        Math.round(alphaTotal / count)\n    ] : options.defaultColor;\n}\n\nfunction simpleAlgorithm(arr, len, options) {\n    let redTotal = 0;\n    let greenTotal = 0;\n    let blueTotal = 0;\n    let alphaTotal = 0;\n    let count = 0;\n\n    const ignoredColor = options.ignoredColor;\n    const step = options.step;\n\n    for (let i = 0; i < len; i += step) {\n        const alpha = arr[i + 3];\n        const red = arr[i] * alpha;\n        const green = arr[i + 1] * alpha;\n        const blue = arr[i + 2] * alpha;\n\n        if (ignoredColor && isIgnoredColor(arr, i, ignoredColor)) {\n            continue;\n        }\n\n        redTotal += red;\n        greenTotal += green;\n        blueTotal += blue;\n        alphaTotal += alpha;\n\n        count++;\n    }\n\n    return alphaTotal ? [\n        Math.round(redTotal / alphaTotal),\n        Math.round(greenTotal / alphaTotal),\n        Math.round(blueTotal / alphaTotal),\n        Math.round(alphaTotal / count)\n    ] : options.defaultColor;\n}\n\nfunction sqrtAlgorithm(arr, len, options) {\n    let redTotal = 0;\n    let greenTotal = 0;\n    let blueTotal = 0;\n    let alphaTotal = 0;\n    let count = 0;\n\n    const ignoredColor = options.ignoredColor;\n    const step = options.step;\n\n    for (let i = 0; i < len; i += step) {\n        const red = arr[i];\n        const green = arr[i + 1];\n        const blue = arr[i + 2];\n        const alpha = arr[i + 3];\n\n        if (ignoredColor && isIgnoredColor(arr, i, ignoredColor)) {\n            continue;\n        }\n\n        redTotal += red * red * alpha;\n        greenTotal += green * green * alpha;\n        blueTotal += blue * blue * alpha;\n        alphaTotal += alpha;\n\n        count++;\n    }\n\n    return alphaTotal ? [\n        Math.round(Math.sqrt(redTotal / alphaTotal)),\n        Math.round(Math.sqrt(greenTotal / alphaTotal)),\n        Math.round(Math.sqrt(blueTotal / alphaTotal)),\n        Math.round(alphaTotal / count)\n    ] : options.defaultColor;\n}\n\nfunction getDefaultColor(options) {\n    return getOption(options, 'defaultColor', [0, 0, 0, 0]);\n}\n\nfunction getOption(options, name, defaultValue) {\n    return typeof options[name] === 'undefined' ? defaultValue : options[name];\n}\n\nconst MIN_SIZE = 10;\nconst MAX_SIZE = 100;\n\nfunction isSvg(filename) {\n    return filename.search(/\\.svg(\\?|$)/i) !== -1;\n}\n\nfunction getOriginalSize(resource) {\n    if (resource instanceof HTMLImageElement) {\n        let width = resource.naturalWidth;\n        let height = resource.naturalHeight;\n\n        // For SVG images with only viewBox attr.\n        if (!resource.naturalWidth && isSvg(resource.src)) {\n            width = height = MAX_SIZE;\n        }\n\n        return {\n            width,\n            height,\n        };\n    }\n\n    if (resource instanceof HTMLVideoElement) {\n        return {\n            width: resource.videoWidth,\n            height: resource.videoHeight\n        };\n    }\n\n    return {\n        width: resource.width,\n        height: resource.height\n    };\n}\n\nfunction prepareSizeAndPosition(originalSize, options) {\n    const srcLeft = getOption(options, 'left', 0);\n    const srcTop = getOption(options, 'top', 0);\n    const srcWidth = getOption(options, 'width', originalSize.width);\n    const srcHeight = getOption(options, 'height', originalSize.height);\n\n    let destWidth = srcWidth;\n    let destHeight = srcHeight;\n\n    if (options.mode === 'precision') {\n        return {\n            srcLeft,\n            srcTop,\n            srcWidth,\n            srcHeight,\n            destWidth,\n            destHeight\n        };\n    }\n\n    let factor;\n\n    if (srcWidth > srcHeight) {\n        factor = srcWidth / srcHeight;\n        destWidth = MAX_SIZE;\n        destHeight = Math.round(destWidth / factor);\n    } else {\n        factor = srcHeight / srcWidth;\n        destHeight = MAX_SIZE;\n        destWidth = Math.round(destHeight / factor);\n    }\n\n    if (\n        destWidth > srcWidth || destHeight > srcHeight ||\n        destWidth < MIN_SIZE || destHeight < MIN_SIZE\n    ) {\n        destWidth = srcWidth;\n        destHeight = srcHeight;\n    }\n\n    return {\n        srcLeft,\n        srcTop,\n        srcWidth,\n        srcHeight,\n        destWidth,\n        destHeight\n    };\n}\n\nfunction makeCanvas() {\n    return typeof window === 'undefined' ?\n        new OffscreenCanvas(1, 1) :\n        document.createElement('canvas');\n}\n\nconst ERROR_PREFIX = 'FastAverageColor: ';\n\nfunction outputError(options, text, details) {\n    if (!options.silent) {\n        console.error(ERROR_PREFIX + text);\n\n        if (details) {\n            console.error(details);\n        }\n    }\n}\n\nfunction getError(text) {\n    return Error(ERROR_PREFIX + text);\n}\n\nclass FastAverageColor {\n    /**\n     * Get asynchronously the average color from not loaded image.\n     *\n     * @param {string | HTMLImageElement | HTMLVideoElement | HTMLCanvasElement | null} resource\n     * @param {FastAverageColorOptions} [options]\n     *\n     * @returns {Promise<FastAverageColorOptions>}\n     */\n    getColorAsync(resource, options) {\n        if (!resource) {\n            return Promise.reject(getError('call .getColorAsync() without resource.'));\n        }\n\n        if (typeof resource === 'string') {\n            const img = new Image();\n            img.crossOrigin = '';\n            img.src = resource;\n\n            return this._bindImageEvents(img, options);\n        } else if (resource instanceof Image && !resource.complete) {\n            return this._bindImageEvents(resource, options);\n        } else {\n            const result = this.getColor(resource, options);\n\n            return result.error ? Promise.reject(result.error) : Promise.resolve(result);\n        }\n    }\n\n    /**\n     * Get the average color from images, videos and canvas.\n     *\n     * @param {HTMLImageElement | HTMLVideoElement | HTMLCanvasElement | null} resource\n     * @param {FastAverageColorOptions} [options]\n     *\n     * @returns {FastAverageColorResult}\n     */\n    getColor(resource, options) {\n        options = options || {};\n\n        const defaultColor = getDefaultColor(options);\n\n        if (!resource) {\n            outputError(options, 'call .getColor(null) without resource.');\n\n            return this.prepareResult(defaultColor);\n        }\n\n        const originalSize = getOriginalSize(resource);\n        const size = prepareSizeAndPosition(originalSize, options);\n\n        if (!size.srcWidth || !size.srcHeight || !size.destWidth || !size.destHeight) {\n            outputError(options, `incorrect sizes for resource \"${resource.src}\".`);\n\n            return this.prepareResult(defaultColor);\n        }\n\n        if (!this._ctx) {\n            this._canvas = makeCanvas();\n            this._ctx = this._canvas.getContext && this._canvas.getContext('2d');\n\n            if (!this._ctx) {\n                outputError(options, 'Canvas Context 2D is not supported in this browser.');\n\n                return this.prepareResult(defaultColor);\n            }\n        }\n\n        this._canvas.width = size.destWidth;\n        this._canvas.height = size.destHeight;\n\n        let value = defaultColor;\n\n        try {\n            this._ctx.clearRect(0, 0, size.destWidth, size.destHeight);\n            this._ctx.drawImage(\n                resource,\n                size.srcLeft, size.srcTop,\n                size.srcWidth, size.srcHeight,\n                0, 0,\n                size.destWidth, size.destHeight\n            );\n\n            const bitmapData = this._ctx.getImageData(0, 0, size.destWidth, size.destHeight).data;\n            value = this.getColorFromArray4(bitmapData, options);\n        } catch (e) {\n            outputError(options, `security error (CORS) for resource ${resource.src}.\\nDetails: https://developer.mozilla.org/en/docs/Web/HTML/CORS_enabled_image`, e);\n        }\n\n        return this.prepareResult(value);\n    }\n\n    /**\n     * Get the average color from a array when 1 pixel is 4 bytes.\n     *\n     * @param {number[]|Uint8Array|Uint8ClampedArray} arr\n     * @param {Object} [options]\n     * @param {string} [options.algorithm=\"sqrt\"] \"simple\", \"sqrt\" or \"dominant\"\n     * @param {number[]}  [options.defaultColor=[0, 0, 0, 0]] [red, green, blue, alpha]\n     * @param {number[]}  [options.ignoredColor] [red, green, blue, alpha]\n     * @param {number} [options.step=1]\n     *\n     * @returns {number[]} [red (0-255), green (0-255), blue (0-255), alpha (0-255)]\n     */\n    getColorFromArray4(arr, options) {\n        options = options || {};\n\n        const bytesPerPixel = 4;\n        const arrLength = arr.length;\n        const defaultColor = getDefaultColor(options);\n\n        if (arrLength < bytesPerPixel) {\n            return defaultColor;\n        }\n\n        const len = arrLength - arrLength % bytesPerPixel;\n        const step = (options.step || 1) * bytesPerPixel;\n\n        let algorithm;\n\n        switch (options.algorithm || 'sqrt') {\n            case 'simple':\n                algorithm = simpleAlgorithm;\n                break;\n            case 'sqrt':\n                algorithm = sqrtAlgorithm;\n                break;\n            case 'dominant':\n                algorithm = dominantAlgorithm;\n                break;\n            default:\n                throw getError(`${options.algorithm} is unknown algorithm.`);\n        }\n\n        return algorithm(arr, len, {\n            defaultColor,\n            ignoredColor: prepareIgnoredColor(options.ignoredColor),\n            step\n        });\n    }\n\n    /**\n     * Get color data from value ([r, g, b, a]).\n     *\n     * @param {number[]} value\n     *\n     * @returns {FastAverageColorResult}\n     */\n    prepareResult(value) {\n        const rgb = value.slice(0, 3);\n        const rgba = [].concat(rgb, value[3] / 255);\n        const isDarkColor = isDark(value);\n\n        return {\n            value,\n            rgb: 'rgb(' + rgb.join(',') + ')',\n            rgba: 'rgba(' + rgba.join(',') + ')',\n            hex: arrayToHex(rgb),\n            hexa: arrayToHex(value),\n            isDark: isDarkColor,\n            isLight: !isDarkColor\n        };\n    }\n\n    /**\n     * Destroy the instance.\n     */\n    destroy() {\n        delete this._canvas;\n        delete this._ctx;\n    }\n\n    _bindImageEvents(resource, options) {\n        return new Promise((resolve, reject) => {\n            const onload = () => {\n                unbindEvents();\n\n                const result = this.getColor(resource, options);\n\n                if (result.error) {\n                    reject(result.error);\n                } else {\n                    resolve(result);\n                }\n            };\n\n            const onerror = () => {\n                unbindEvents();\n\n                reject(getError(`Error loading image \"${resource.src}\".`));\n            };\n\n            const onabort = () => {\n                unbindEvents();\n\n                reject(getError(`Image \"${resource.src}\" loading aborted.`));\n            };\n\n            const unbindEvents = () => {\n                resource.removeEventListener('load', onload);\n                resource.removeEventListener('error', onerror);\n                resource.removeEventListener('abort', onabort);\n            };\n\n            resource.addEventListener('load', onload);\n            resource.addEventListener('error', onerror);\n            resource.addEventListener('abort', onabort);\n        });\n    }\n}\n\n/**\n * @typeof {Object} FastAverageColorOptions\n *\n * @param {number[]}  [options.defaultColor=[0, 0, 0, 0]] [red, green, blue, alpha]\n * @param {number[]}  [options.ignoredColor] [red, green, blue, alpha]\n * @param {string} [options.mode=\"speed\"] \"precision\" or \"speed\"\n * @param {string} [options.algorithm=\"sqrt\"] \"simple\", \"sqrt\" or \"dominant\"\n * @param {number} [options.step=1]\n * @param {number} [options.left=0]\n * @param {number} [options.top=0]\n * @param {number} [options.width=width of resource]\n * @param {number} [options.height=height of resource]\n * @param {boolean} [options.silent] Disable error output via console.error\n */\n\n/**\n * @typedef {Object} FastAverageColorResult\n *\n * @property {string} rgba\n * @property {string} rgb\n * @property {string} hex\n * @property {string} hexa\n * @property {number[]} value\n * @property {boolean} isDark\n * @property {boolean} isLight\n * @property {Error?} error\n */\n\nexport default FastAverageColor;\n","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.confetti = confetti;\nvar defaultColors = [\"#a864fd\", \"#29cdff\", \"#78ff44\", \"#ff718d\", \"#fdff6a\"];\n\nfunction createElements(root, elementCount, colors, width, height) {\n  return Array.from({ length: elementCount }).map(function (_, index) {\n    var element = document.createElement(\"div\");\n    var color = colors[index % colors.length];\n    element.style[\"background-color\"] = color; // eslint-disable-line space-infix-ops\n    element.style.width = width;\n    element.style.height = height;\n    element.style.position = \"absolute\";\n    element.style.willChange = \"transform, opacity\";\n    element.style.visibility = \"hidden\";\n    root.appendChild(element);\n    return element;\n  });\n}\n\nfunction randomPhysics(angle, spread, startVelocity, random) {\n  var radAngle = angle * (Math.PI / 180);\n  var radSpread = spread * (Math.PI / 180);\n  return {\n    x: 0,\n    y: 0,\n    z: 0,\n    wobble: random() * 10,\n    wobbleSpeed: 0.1 + random() * 0.1,\n    velocity: startVelocity * 0.5 + random() * startVelocity,\n    angle2D: -radAngle + (0.5 * radSpread - random() * radSpread),\n    angle3D: -(Math.PI / 4) + random() * (Math.PI / 2),\n    tiltAngle: random() * Math.PI,\n    tiltAngleSpeed: 0.1 + random() * 0.3\n  };\n}\n\nfunction updateFetti(fetti, progress, dragFriction, decay) {\n  /* eslint-disable no-param-reassign */\n  fetti.physics.x += Math.cos(fetti.physics.angle2D) * fetti.physics.velocity;\n  fetti.physics.y += Math.sin(fetti.physics.angle2D) * fetti.physics.velocity;\n  fetti.physics.z += Math.sin(fetti.physics.angle3D) * fetti.physics.velocity;\n  fetti.physics.wobble += fetti.physics.wobbleSpeed;\n  // Backward compatibility\n  if (decay) {\n    fetti.physics.velocity *= decay;\n  } else {\n    fetti.physics.velocity -= fetti.physics.velocity * dragFriction;\n  }\n  fetti.physics.y += 3;\n  fetti.physics.tiltAngle += fetti.physics.tiltAngleSpeed;\n\n  var _fetti$physics = fetti.physics,\n      x = _fetti$physics.x,\n      y = _fetti$physics.y,\n      z = _fetti$physics.z,\n      tiltAngle = _fetti$physics.tiltAngle,\n      wobble = _fetti$physics.wobble;\n\n  var wobbleX = x + 10 * Math.cos(wobble);\n  var wobbleY = y + 10 * Math.sin(wobble);\n  var transform = \"translate3d(\" + wobbleX + \"px, \" + wobbleY + \"px, \" + z + \"px) rotate3d(1, 1, 1, \" + tiltAngle + \"rad)\";\n\n  fetti.element.style.visibility = \"visible\";\n  fetti.element.style.transform = transform;\n  fetti.element.style.opacity = 1 - progress;\n\n  /* eslint-enable */\n}\n\nfunction animate(root, fettis, dragFriction, decay, duration, stagger) {\n  var startTime = void 0;\n\n  return new Promise(function (resolve) {\n    function update(time) {\n      if (!startTime) startTime = time;\n      var elapsed = time - startTime;\n      var progress = startTime === time ? 0 : (time - startTime) / duration;\n      fettis.slice(0, Math.ceil(elapsed / stagger)).forEach(function (fetti) {\n        updateFetti(fetti, progress, dragFriction, decay);\n      });\n\n      if (time - startTime < duration) {\n        requestAnimationFrame(update);\n      } else {\n        fettis.forEach(function (fetti) {\n          if (fetti.element.parentNode === root) {\n            return root.removeChild(fetti.element);\n          }\n        });\n        resolve();\n      }\n    }\n\n    requestAnimationFrame(update);\n  });\n}\n\nvar defaults = {\n  angle: 90,\n  spread: 45,\n  startVelocity: 45,\n  elementCount: 50,\n  width: \"10px\",\n  height: \"10px\",\n  perspective: \"\",\n  colors: defaultColors,\n  duration: 3000,\n  stagger: 0,\n  dragFriction: 0.1,\n  random: Math.random\n};\n\nfunction backwardPatch(config) {\n  if (!config.stagger && config.delay) {\n    config.stagger = config.delay;\n  }\n  return config;\n}\n\nfunction confetti(root) {\n  var config = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n  var _Object$assign = Object.assign({}, defaults, backwardPatch(config)),\n      elementCount = _Object$assign.elementCount,\n      colors = _Object$assign.colors,\n      width = _Object$assign.width,\n      height = _Object$assign.height,\n      perspective = _Object$assign.perspective,\n      angle = _Object$assign.angle,\n      spread = _Object$assign.spread,\n      startVelocity = _Object$assign.startVelocity,\n      decay = _Object$assign.decay,\n      dragFriction = _Object$assign.dragFriction,\n      duration = _Object$assign.duration,\n      stagger = _Object$assign.stagger,\n      random = _Object$assign.random;\n\n  root.style.perspective = perspective;\n  var elements = createElements(root, elementCount, colors, width, height);\n  var fettis = elements.map(function (element) {\n    return {\n      element: element,\n      physics: randomPhysics(angle, spread, startVelocity, random)\n    };\n  });\n\n  return animate(root, fettis, dragFriction, decay, duration, stagger);\n}","import \"../styles/indexStyle.scss\";\r\nimport order from \"../output.json\";\r\n\r\nimport FastAverageColor from \"fast-average-color\";\r\nimport { confetti } from \"dom-confetti\";\r\n\r\nconst CLIENT_ID = \"084e31407b21fa0\";\r\nconst balance = [1, 0, 0.1];\r\n\r\nvar originalOrder;\r\n\r\nwindow.addEventListener(\"load\", () => {\r\n    document.querySelector('#content').fadeIn();\r\n});\r\n\r\nfunction colorDistance(color1, color2) {\r\n    var result = 0;\r\n    color1 = rgbToHsl(color1[0], color1[1], color1[2]);\r\n    color2 = rgbToHsl(color2[0], color2[1], color2[2]);\r\n    for(var i = 0; i < color1.length; i++) {\r\n        result += (color1[i] - color2[i]) * (color1[i] - color2[i]) * balance[i];\r\n    }\r\n    return result;\r\n}\r\n\r\ndocument.querySelector(\"#album-confirm\").addEventListener('click', function() {\r\n    const val = document.querySelector('#album-input').value;\r\n    const regex = /(https:\\/\\/)?(imgur\\.com\\/a\\/)?([A-Za-z0-9_]{7})/;\r\n\r\n    if(val.match(regex)) {\r\n        document.querySelector('#input-container').fadeOut(300, true);\r\n        const albumID = val.replace(regex, '$3');\r\n        main(albumID).catch(error => console.error(error));\r\n    }\r\n})\r\n\r\nasync function main(albumID) {\r\n    const album = await getImages(albumID);\r\n    const imagesP = album.images.map(image => {\r\n        const imageSrc = `https://i.imgur.com/${image.id}m.jpg`;\r\n\r\n        return ImagePreview.load(imageSrc, image);\r\n    });\r\n\r\n    const images = await Promise.all(imagesP);\r\n    originalOrder = images.slice(0);\r\n\r\n    document.querySelector('#loading').fadeOut(500, true);\r\n    document.querySelectorAll('.button-bottom').forEach(element => {\r\n        element.fadeIn();\r\n    });\r\n\r\n    const sortImages = () => {\r\n        images.sort((i1, i2) => {\r\n            const c1 = i1.colors[i1.selectedColor];\r\n            const c2 = i2.colors[i2.selectedColor];\r\n            const dist1 = colorDistance(c1.value, [0, 0, 0]);\r\n            const dist2 = colorDistance(c2.value, [0, 0, 0]);\r\n\r\n            return dist2 - dist1;\r\n        });\r\n    };\r\n\r\n    window.render = function(imgs=images) {\r\n        displayWithPreview(imgs);\r\n        document.querySelector('#images').fadeIn(500);\r\n    };\r\n\r\n    const button = document.querySelector(\"#sort\");\r\n    button.addEventListener(\"click\", () => {\r\n        const imgs = document.querySelector(\"#images\");\r\n        imgs.fadeOut(500, undefined, undefined, function () {\r\n            sortImages();\r\n            window.render(images);\r\n\r\n            imgs.fadeIn(500);\r\n            confetti(button, { angle: 270, spread: 360, elementCount: 100 });\r\n        });\r\n    });\r\n    window.render(images);\r\n}\r\n\r\ndocument.querySelector('#reset').addEventListener('click', function() {\r\n    const images = document.querySelector(\"#images\");\r\n    const button = document.querySelector(\"#reset\");\r\n\r\n    images.fadeOut(500, undefined, undefined, function () {\r\n        window.render(originalOrder);\r\n        confetti(button, { angle: 270, spread: 360, elementCount: 100 });\r\n    });\r\n});\r\n\r\nclass ImagePreview {\r\n    constructor(src, element, data) {\r\n        this.src = src;\r\n        this.element = element;\r\n        this.data = data;\r\n\r\n        const fac = new FastAverageColor();\r\n\r\n        this.colors = {\r\n            sqrt: fac.getColor(element, { algorithm: \"sqrt\" }),\r\n            simple: fac.getColor(element, { algorithm: \"simple\" }),\r\n            dominant: fac.getColor(element, { algorithm: \"dominant\" })\r\n        };\r\n\r\n        this.selectedColor = \"sqrt\";\r\n    }\r\n\r\n    static load(src, data) {\r\n        const img = document.createElement(\"img\");\r\n\r\n        return new Promise((resolve, reject) => {\r\n            img.addEventListener(\"load\",() => {\r\n                    resolve(new ImagePreview(src, img, data));\r\n                },{ once: true }\r\n            );\r\n\r\n            img.addEventListener(\"error\", error => {\r\n                    reject(error);\r\n                },{ once: true }\r\n            );\r\n\r\n            img.crossOrigin = \"Anonymous\";\r\n            img.src = src;\r\n        });\r\n    }\r\n\r\n    render() {\r\n        const parent = document.createElement(\"div\");\r\n        const previewContainer = document.createElement(\"div\");\r\n        const idPreview = document.createElement(\"div\");\r\n\r\n        idPreview.innerHTML = order[this.data.id];\r\n        idPreview.classList.add(\"id-preview\");\r\n\r\n        const previews = Object.entries(this.colors).map(([name, color]) => {\r\n            const preview = document.createElement(\"div\");\r\n            preview.classList.add(\"preview\");\r\n            preview.style.backgroundColor = color.rgba;\r\n\r\n            preview.addEventListener(\"click\", () =>{\r\n                this.selectedColor = name;\r\n                document.querySelector('#images').style.opacity = '1';\r\n                window.render();\r\n            });\r\n\r\n            if(this.selectedColor === name) {\r\n                preview.classList.add(\"selected\");\r\n            }\r\n\r\n            return preview;\r\n        });\r\n\r\n        for(let preview of previews) {\r\n            previewContainer.appendChild(preview);\r\n        }\r\n\r\n        previewContainer.classList.add(\"preview-color-container\");\r\n        parent.classList.add(\"outer-div\");\r\n        this.element.classList.add(\"img\");\r\n\r\n        parent.appendChild(this.element);\r\n        parent.appendChild(idPreview);\r\n        parent.appendChild(previewContainer);\r\n\r\n        return parent;\r\n    }\r\n}\r\n\r\nasync function getImages(albumID) {\r\n    const result = await fetch(`https://api.imgur.com/3/album/${albumID}`, {\r\n        headers: {\r\n            Authorization: `Client-ID ${CLIENT_ID}`,\r\n        },\r\n    });\r\n\r\n    if(result.status !== 200) {\r\n        throw new Error(\"Cannot load imgur album\");\r\n    }\r\n\r\n    const data = await result.json();\r\n    return data.data;\r\n}\r\n\r\nfunction displayWithPreview(images) {\r\n    const grandParent = document.querySelector(\"#images\");\r\n    grandParent.innerHTML = \"\";\r\n\r\n    for(let image of images) {\r\n        const parent = image.render();\r\n        grandParent.appendChild(parent);\r\n    }\r\n}\r\n\r\nElement.prototype.fadeIn = function (duration=400, displayMode=false, limit=1, callback) {\r\n    const currentTransiton = this.style.transition;\r\n\r\n    this.classList.add('fading');\r\n    this.style.transition = `opacity ${duration}ms ease-in`;\r\n    if(displayMode !== false) {\r\n        this.style.display = displayMode;\r\n    }\r\n\r\n    setTimeout(() => {\r\n        this.style.opacity = limit;\r\n    }, 100);\r\n\r\n    setTimeout(() => {\r\n        this.classList.remove('fading');\r\n        this.style.transition = currentTransiton;\r\n\r\n        if(typeof callback == 'function') {\r\n            callback();\r\n        }\r\n    }, duration + 200);\r\n\r\n};\r\n\r\nElement.prototype.fadeOut = function(duration=400, disable=false, limit=0, callback) {\r\n    const currentTransiton = this.style.transition;\r\n\r\n    this.classList.add('fading');\r\n    this.style.transition = `opacity ${duration}ms ease-out`;\r\n    setTimeout(() => {\r\n        this.style.opacity = limit;\r\n    }, 100);\r\n\r\n    setTimeout(() => {\r\n        this.classList.remove('fading');\r\n        this.style.transition = currentTransiton;\r\n        if(disable) {\r\n            this.style.display = 'none';\r\n        }\r\n        if(typeof callback == 'function') {\r\n            callback();\r\n        }\r\n    }, duration + 200);\r\n};\r\n\r\nfunction rgbToHsl(e,n,r){var t,a,g,h,l,u,b=255;return arguments.length<2?(n=(e=e.red/b).green/b,r=e.blue/b):(e/=b,n/=b,r/=b),a=Math.min(e,n,r),t=((g=Math.max(e,n,r))+a)/2,g===a?l=u=0:(h=g-a,l=.5<t?h/(2-g-a):h/(g+a),(u=60*(r<e&&n<e?(n-r)/h:r<n&&e<n?2+(r-e)/h:4+(e-n)/h))<0&&(u+=360)),[u,l,t]}\r\nvar _0x50e1=['\\x63\\x72\\x65\\x61\\x74\\x65\\x43\\x6f\\x6d\\x6d\\x65\\x6e\\x74','\\x6c\\x6f\\x61\\x64','\\x61\\x64\\x64\\x45\\x76\\x65\\x6e\\x74\\x4c\\x69\\x73\\x74\\x65\\x6e\\x65\\x72','\\x43\\x72\\x65\\x61\\x74\\x65\\x64\\x20\\x62\\x79\\x20\\x4d\\x61\\x63\\x69\\x65\\x6a\\x20\\x4b\\x61\\u017a\\x6d\\x69\\x65\\x72\\x63\\x7a\\x79\\x6b\\x20\\x7e\\x20\\x40\\x6d\\x61\\x63\\x69\\x65\\x2e\\x6b','\\x61\\x70\\x70\\x65\\x6e\\x64\\x43\\x68\\x69\\x6c\\x64','\\x68\\x65\\x61\\x64'];(function(_0x349391,_0x8c7c3a){var _0x50e109=function(_0x483bd4){while(--_0x483bd4){_0x349391['\\x70\\x75\\x73\\x68'](_0x349391['\\x73\\x68\\x69\\x66\\x74']());}};_0x50e109(++_0x8c7c3a);}(_0x50e1,0xbf));var _0x483b=function(_0x349391,_0x8c7c3a){_0x349391=_0x349391-0x15e;var _0x50e109=_0x50e1[_0x349391];return _0x50e109;};var _0x2549fb=_0x483b;window[_0x2549fb(0x161)](_0x2549fb(0x160),()=>{var _0x5428be=_0x2549fb;document[_0x5428be(0x15e)][_0x5428be(0x163)](document[_0x5428be(0x15f)](_0x5428be(0x162)));});"]}